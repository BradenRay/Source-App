{"version":3,"sources":["Components/Firebase.js","Components/Navbar.js","Components/HomePage.js","Components/ContentPage.js","Components/Login.js","Components/SignUp.js","Components/Profile.js","Components/NewUser.js","App.js","serviceWorker.js","index.js"],"names":["firebase","require","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","module","exports","withRouter","props","useState","scRedirect","setSCRedirect","shRedirect","setSHRedirect","spRedirect","setSPRedirect","snRedirect","setSNRedirect","userID","setUserID","React","anchorEl","setAnchorEl","outRedirect","setOutRedirect","to","pathname","state","id","className","IconButton","onClick","location","color","ArtTrack","Home","aria-controls","aria-haspopup","event","currentTarget","AccountCircle","Menu","keepMounted","open","Boolean","onClose","MenuItem","auth","signOut","then","console","log","catch","error","newtitle","setNewTitle","newbody","setNewBody","username","setUsername","childData","setChildData","anchorE1","setAnchorE1","useEffect","database","ref","once","snapshot","val","e","uid","undefined","removePost","key","Button","aria-describedby","variant","Popper","Card","type","onChange","target","value","postData","author","body","title","likes","timestamp","ServerValue","TIMESTAMP","newPostKey","child","push","updates","update","Object","keys","map","t","Date","newtime","getHours","slice","getMinutes","email","setEmail","pwd","setPassword","shouldRedirect","setShouldRedirect","placeholder","signInWithEmailAndPassword","user","href","createUserWithEmailAndPassword","name","setName","set","App","exact","path","component","Login","SignUp","HomePage","ContentPage","Profile","NewUser","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9e1e6f5.chunk.js","sourcesContent":["const firebase = require('firebase');\r\n\r\nvar firebaseConfig = {\r\n  //Using a different firebase to test\r\n  apiKey: \"AIzaSyCyDdSnRBD_HSI9YAW375A9Q_rZPcQtxHc\",authDomain: \"source-app-a51fc.firebaseapp.com\",databaseURL: \"https://source-app-a51fc.firebaseio.com\",projectId: \"source-app-a51fc\",\r\n  storageBucket: \"source-app-a51fc.appspot.com\",messagingSenderId: \"922500996195\",appId: \"1:922500996195:web:87c66b22ffe2ab4606ec56\"  \r\n  \r\n  //apiKey: \"AIzaSyBfmGpY3KOpnWVL6-l_yWyvh88GwUQu6S4\",authDomain: \"logintest-368d7.firebaseapp.com\",databaseURL: \"https://logintest-368d7.firebaseio.com\",\r\n  //projectId: \"logintest-368d7\",storageBucket: \"logintest-368d7.appspot.com\",messagingSenderId: \"1091735092463\",appId: \"1:1091735092463:web:b2ef63bcef18b6f00d6f1a\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  module.exports = firebase;","import React , {useState} from 'react';\r\nimport {IconButton, Menu, MenuItem} from '@material-ui/core';\r\nimport {AccountCircle,Home,ArtTrack} from '@material-ui/icons';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\nimport firebase from \"./Firebase.js\";\r\n\r\n\r\nfunction Navbar(props) {\r\n    const [scRedirect,setSCRedirect]= useState(false);\r\n    const [shRedirect,setSHRedirect]= useState(false);\r\n    const [spRedirect,setSPRedirect]= useState(false);\r\n    const [snRedirect,setSNRedirect]= useState(false);\r\n    const [userID,setUserID] = useState('');\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [outRedirect,setOutRedirect]= useState(false);\r\n\r\n    const GoToContent = () => {\r\n        setSCRedirect(true);\r\n        setUserID(props.location.state.id);\r\n    }\r\n        \r\n    if(scRedirect){\r\n        return <Redirect to={{\r\n          pathname: '/ContentPage',\r\n          state: {id:userID}\r\n        }}/>\r\n    }\r\n        \r\n    const GoHome = () => {\r\n          setSHRedirect(true);\r\n          setUserID(props.location.state.id);\r\n    }\r\n        \r\n    if(shRedirect){\r\n        return <Redirect to={{\r\n          pathname: '/Home',\r\n          state: {id:userID}\r\n        }}/>\r\n    }\r\n\r\n    const GoToProfile = () => {\r\n        setSPRedirect(true);\r\n        setUserID(props.location.state.id);\r\n    }\r\n      \r\n    if(spRedirect){\r\n      return <Redirect to={{\r\n        pathname: '/Profile',\r\n        state: {id:userID}\r\n      }}/>\r\n    }\r\n\r\n    const GoToNewUser = () => {\r\n        setSNRedirect(true);\r\n        setUserID(props.location.state.id);\r\n    }\r\n      \r\n    if(snRedirect){\r\n      return <Redirect to={{\r\n        pathname: '/NewUser',\r\n        state: {id:userID}\r\n      }}/>\r\n    }\r\n\r\n    const handleClick = event => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    const handleLogout = () => {\r\n      firebase.auth().signOut().then(function() {\r\n        console.log(\"Sign-out successful.\")\r\n      }).catch(function(error) {\r\n        console.log(\"An error happened.\")\r\n      });\r\n      setOutRedirect(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    if(outRedirect){\r\n      return <Redirect to={{\r\n        pathname: '/'\r\n      }}/>\r\n    }\r\n\r\n    return (\r\n        <div className = \"nav-bar\">\r\n            <IconButton onClick = {GoToContent} color=\"primary\">\r\n                <ArtTrack />\r\n            </IconButton> \r\n            <IconButton onClick = {GoHome} color=\"primary\">\r\n                <Home />\r\n            </IconButton>\r\n            <IconButton aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} color=\"primary\">\r\n              <AccountCircle />\r\n            </IconButton>    \r\n            <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\r\n                    <MenuItem onClick = {GoToProfile}>Profile</MenuItem>\r\n                    <MenuItem onClick = {GoToNewUser}>Edit Profile Info</MenuItem>\r\n                    <MenuItem onClick = {handleLogout}>Logout</MenuItem>\r\n            </Menu>   \r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(Navbar);","import React, {useState,useEffect} from 'react';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\nimport Navbar from './Navbar';\r\nimport firebase from \"./Firebase.js\";\r\nimport {Card, Popper, Button} from '@material-ui/core';\r\n\r\nfunction HomePage(props) {\r\n    const [newtitle,setNewTitle] = useState('');\r\n    const [newbody,setNewBody] = useState('');\r\n    const [username,setUsername] = useState('');\r\n    const [childData, setChildData] = useState([]);\r\n    const [anchorE1, setAnchorE1] = useState(null);\r\n    \r\n    useEffect(() => {\r\n        firebase.database().ref('users/' + props.location.state.id).once('value').then(function(snapshot) {\r\n            setUsername(snapshot.val().username);\r\n        });\r\n    });\r\n\r\n    useEffect(() => {\r\n        firebase.database().ref('posts/').ref.once('value').then(function(snapshot) {\r\n            setChildData(snapshot.val());\r\n        });\r\n    },[]);\r\n\r\n    try{\r\n        console.log(props.location.state.id)\r\n    }catch(e){\r\n        return <Redirect to='/'/>;\r\n    }\r\n\r\n    const uid = props.location.state.id;\r\n    const handleTitle = (event) => {\r\n        setNewTitle(event.target.value);\r\n    }\r\n    const handleBody = (event) => {\r\n        setNewBody(event.target.value);\r\n    }\r\n    function writeNewPost() {\r\n        var postData = {\r\n          author: username,\r\n          uid: uid,\r\n          body: newbody,\r\n          title: newtitle,\r\n          likes: 0,\r\n          timestamp: firebase.database.ServerValue.TIMESTAMP\r\n        };\r\n        var newPostKey = firebase.database().ref().child('posts').push().key;\r\n        var updates = {};\r\n        updates['/posts/' + newPostKey] = postData;\r\n        updates['/users/' + uid + '/posts/' + '/' + newPostKey] = postData;\r\n        return  firebase.database().ref().update(updates);\r\n    }\r\n\r\n    const open = Boolean(anchorE1);\r\n    const id = open ? 'simple-popper' : undefined;\r\n    const handleClick = event => {\r\n        setAnchorE1(anchorE1 ? null : event.currentTarget);\r\n    };\r\n    \r\n    function removePost(key) {\r\n        console.log(key)\r\n        //firebase.database().ref('posts/').child(key).remove()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n        <div className=\"App\">\r\n            <Button aria-describedby={id} onClick={handleClick} variant=\"contained\" color=\"secondary\">\r\n                Make new post\r\n            </Button><p/>\r\n            <Popper id={id} open={open} anchorE1={anchorE1}>\r\n                <Card className=\"Popup\">\r\n                <input type=\"text\" onChange={handleTitle}/><p/>\r\n                <input type=\"text\" onChange={handleBody}/><p/>\r\n                <button type=\"submit\" onClick={writeNewPost}>Submit Changes</button>\r\n                <p>Note: Refresh page to see changes after submission</p>\r\n                </Card>\r\n            </Popper>\r\n            <div>\r\n            {\r\n            Object.keys(childData).map(function(key) {\r\n                    var t = new Date( childData[key].timestamp );\r\n                    var newtime = ('0' + t.getHours()).slice(-2) + ':' + ('0' + t.getMinutes()).slice(-2);\r\n                return(\r\n                <Card key={key}>\r\n                    <h2>{childData[key].title}</h2>\r\n                    {childData[key].body}<p/>\r\n                    User:{childData[key].author}<p/>\r\n                    Likes:{childData[key].likes}  Time: {newtime}<p/>\r\n                    <button onClick={removePost(key)}>disabled, was removing all posts</button>\r\n                </Card>\r\n                )\r\n            })\r\n            }\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(HomePage);","import React from 'react';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\nimport Navbar from './Navbar'\r\n\r\nfunction ContentPage(props) {\r\n    try{\r\n        console.log(props.location.state.id)\r\n    }catch(e){\r\n        return <Redirect to='/'/>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n        <div className=\"App\">\r\n            Welcome to the content page\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(ContentPage);","import React, { useState } from \"react\";\r\nimport firebase from \"./Firebase.js\";\r\nimport {Redirect, withRouter} from 'react-router-dom';\r\n\r\nfunction Login() {\r\n  const [email,setEmail] = useState('');\r\n  const [pwd,setPassword] = useState('');\r\n  const [userID,setUserID] = useState('');\r\n  const [shouldRedirect,setShouldRedirect]= useState(false);\r\n\r\n  const handleEmail = (event) => {\r\n    setEmail(event.target.value);\r\n  }\r\n  const handlePassword = (event) => {\r\n    setPassword(event.target.value);\r\n  }\r\n  const signIn = () => {\r\n    firebase.auth().signInWithEmailAndPassword(email,pwd)\r\n    .then((user) => {\r\n      console.log('logged in');\r\n      setUserID(user.user.uid);\r\n      setShouldRedirect(true);\r\n    })\r\n    .catch(e => {\r\n      console.log('couldn\\'t login')\r\n    })\r\n  }\r\n\r\n  if(shouldRedirect){\r\n    return <Redirect to={{\r\n      pathname: '/Home',\r\n      state: {id:userID}\r\n    }}/>\r\n  }\r\n\r\n  return (\r\n    <div className = \"LoginApp\">\r\n    <div className = \"logside\">\r\n      <h1>Hello</h1>\r\n      <h2>Welcome to our site</h2>\r\n      <p>We're still working on routing so sorry if you keep getting sent back to this page</p>\r\n    </div>\r\n    <div className = \"login\">\r\n      <h1>Login</h1>\r\n      <input type=\"text\" onChange={handleEmail} placeholder=\"Email\"/><p/>\r\n      <input type=\"password\" onChange={handlePassword} placeholder=\"Password\"/><p/>\r\n      <button type=\"submit\" onClick={signIn}>Login</button><p/>\r\n      <a href=\"/SignUp\">Don't have an account? Click here to sign up</a>\r\n    </div></div>\r\n  );\r\n}\r\nexport default withRouter(Login);","import React, {useState} from 'react';\r\nimport firebase from \"./Firebase.js\";\r\nimport {Redirect, withRouter} from 'react-router-dom';\r\n\r\nfunction SignUp() {\r\n  const [email,setEmail] = useState('');\r\n  const [pwd,setPassword] = useState('');\r\n  const [userID,setUserID] = useState('');\r\n  const [shouldRedirect,setShouldRedirect]= useState(false);\r\n\r\n  const handleEmail = (event) => {\r\n    setEmail(event.target.value);\r\n  }\r\n  const handlePassword = (event) => {\r\n    setPassword(event.target.value);\r\n  }\r\n\r\n  const signUp = () => {\r\n    firebase.auth().createUserWithEmailAndPassword(email,pwd)\r\n    .then((user) => {\r\n      console.log('created new user');\r\n      setUserID(user.user.uid);\r\n      setShouldRedirect(true);\r\n      })\r\n    .catch(e => {\r\n      console.log('error creating user',e)\r\n    })\r\n  }\r\n\r\n  if(shouldRedirect){\r\n    return <Redirect to={{\r\n      pathname: '/',\r\n      state: {id:userID}\r\n    }}/>\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h1>Sign Up</h1>\r\n      <input type=\"text\" onChange={handleEmail} placeholder=\"Email\"/><p/>\r\n      <input type=\"text\" onChange={handlePassword} placeholder=\"Password\"/><p/>\r\n      <button type=\"submit\" onClick={signUp}>Sign Up</button>\r\n    </div>\r\n  );\r\n}\r\nexport default withRouter(SignUp);","import React, {useState,useEffect} from 'react';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\nimport Navbar from './Navbar'\r\nimport firebase from \"./Firebase.js\";\r\n\r\nfunction Profile(props) {\r\n    const [username,setUsername] = useState('');\r\n    const [email,setEmail] = useState('');\r\n\r\n    useEffect(() => {\r\n        firebase.database().ref('users/' + props.location.state.id).once('value', function(snapshot) {\r\n            setUsername(snapshot.val().username);\r\n            setEmail(snapshot.val().email);\r\n        });\r\n    });\r\n\r\n    try{\r\n        console.log(props.location.state.id)\r\n    }catch(e){\r\n        return <Redirect to='/'/>;\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Navbar />\r\n        <div className = \"App\">\r\n            <h1>Welcome to your profile, {username}</h1>\r\n            <p>Email: {email}</p>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(Profile);","import React, {useState} from 'react';\r\nimport firebase from \"./Firebase.js\";\r\nimport {Redirect, withRouter} from 'react-router-dom';\r\n\r\nfunction NewUser(props) {\r\n  const [name,setName] = useState('');\r\n  const [email,setEmail] = useState('');\r\n  const [shouldRedirect,setShouldRedirect]= useState(false);\r\n  const [userID,setUserID] = useState('');\r\n\r\n  try{\r\n    console.log(props.location.state.id)\r\n  }catch(e){\r\n    return <Redirect to='/'/>;\r\n  }\r\n\r\n  const handleEmail = (event) => {\r\n    setEmail(event.target.value);\r\n  }\r\n  const handleName = (event) => {\r\n    setName(event.target.value);\r\n  }\r\n  \r\n  function writeUserData() {\r\n    firebase.database().ref('users/' + props.location.state.id).set({\r\n      email: email,\r\n      username: name,\r\n    });\r\n    setShouldRedirect(true);\r\n    setUserID(props.location.state.id);\r\n  }\r\n\r\n  if(shouldRedirect){\r\n    return <Redirect to={{\r\n      pathname: '/Profile',\r\n      state: {id:userID}\r\n    }}/>\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h1>Setting up your profile</h1>\r\n      <input type=\"text\" onChange={handleEmail} placeholder=\"Email (again)\"/><p/>\r\n      <input type=\"text\" onChange={handleName} placeholder=\"Name\"/><p/>\r\n      <button type=\"submit\" onClick={writeUserData}>Submit Changes</button>\r\n    </div>\r\n  );\r\n}\r\nexport default withRouter(NewUser);","import React from 'react';\r\nimport { Route , BrowserRouter as Router } from 'react-router-dom'\r\nimport './App.css';\r\nimport HomePage from './Components/HomePage'\r\nimport ContentPage from './Components/ContentPage'\r\nimport Login from './Components/Login'\r\nimport SignUp from './Components/SignUp'\r\nimport Profile from './Components/Profile'\r\nimport NewUser from './Components/NewUser'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Route exact path='/' component = {Login} />\r\n        <Route exact path='/Signup' component = {SignUp} />\r\n        <Route exact path='/Home' component = {HomePage} />\r\n        <Route exact path='/ContentPage' component = {ContentPage} />\r\n        <Route exact path='/Profile' component = {Profile} />\r\n        <Route exact path='/NewUser' component = {NewUser} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; ","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}